/// <reference types="@rjsf/core" />
declare const widgets: {
    AltDateTimeWidget: {
        (props: import("@rjsf/core").WidgetProps): JSX.Element;
        defaultProps: {
            showTime: boolean;
            autofocus: boolean;
            disabled: boolean;
            readonly: boolean;
            options: {
                yearsRange: number[];
            };
        };
    };
    AltDateWidget: {
        (props: any): JSX.Element;
        defaultProps: {
            autofocus: boolean;
            disabled: boolean;
            readonly: boolean;
            showTime: boolean;
            options: {
                yearsRange: number[];
            };
        };
    };
    CheckboxWidget: (props: import("@rjsf/core").WidgetProps) => JSX.Element;
    CheckboxesWidget: (props: import("@rjsf/core").WidgetProps) => JSX.Element;
    ColorWidget: (props: import("@rjsf/core").WidgetProps) => JSX.Element;
    DateWidget: (props: import("@rjsf/core").WidgetProps) => JSX.Element;
    DateTimeWidget: (props: import("@rjsf/core").WidgetProps) => JSX.Element;
    EmailWidget: (props: import("@rjsf/core").WidgetProps) => JSX.Element;
    PasswordWidget: (props: import("@rjsf/core").WidgetProps) => JSX.Element;
    RadioWidget: ({ id, schema, options, value, required, disabled, readonly, label, onChange, onBlur, onFocus, uiSchema, }: import("@rjsf/core").WidgetProps) => JSX.Element;
    RangeWidget: ({ value, readonly, disabled, onBlur, onFocus, options, schema, uiSchema, onChange, label, id, }: import("@rjsf/core").WidgetProps) => JSX.Element;
    SelectWidget: (props: import("@rjsf/core").WidgetProps) => JSX.Element;
    TextareaWidget: ({ id, placeholder, value, label, disabled, autofocus, readonly, onBlur, onFocus, onChange, options, schema, uiSchema, required, rawErrors, }: import("@rjsf/core").WidgetProps) => JSX.Element;
    TextWidget: (props: import("@rjsf/core").WidgetProps) => JSX.Element;
    UpDownWidget: (props: import("@rjsf/core").WidgetProps) => JSX.Element;
    URLWidget: (props: import("@rjsf/core").WidgetProps) => JSX.Element;
    SubmitButton: ({ uiSchema }: import("@rjsf/core").WidgetProps) => JSX.Element | null;
};
export default widgets;

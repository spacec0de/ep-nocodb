{"version":3,"file":"select.js","names":["Select","props","ref","chakraSelectProps"],"sources":["../../src/select.tsx"],"sourcesContent":["import React, { forwardRef } from \"react\";\nimport type { MutableRefObject, ReactElement, RefAttributes } from \"react\";\nimport ReactSelect from \"react-select\";\nimport type { GroupBase, Props, SelectInstance } from \"react-select\";\nimport useChakraSelectProps from \"./use-chakra-select-props\";\n\nexport type SelectComponent = <\n  Option = unknown,\n  IsMulti extends boolean = false,\n  Group extends GroupBase<Option> = GroupBase<Option>\n>(\n  props: Props<Option, IsMulti, Group> &\n    RefAttributes<SelectInstance<Option, IsMulti, Group>>\n) => ReactElement;\n\nconst Select = forwardRef(\n  <Option, IsMulti extends boolean, Group extends GroupBase<Option>>(\n    props: Props<Option, IsMulti, Group>,\n    ref:\n      | ((instance: SelectInstance<Option, IsMulti, Group> | null) => void)\n      | MutableRefObject<SelectInstance<Option, IsMulti, Group> | null>\n      | null\n  ) => {\n    const chakraSelectProps = useChakraSelectProps(props);\n\n    return <ReactSelect ref={ref} {...chakraSelectProps} />;\n  }\n) as SelectComponent;\n\nexport default Select;\n"],"mappings":";;;;;AAAA;;AAEA;;AAEA;;;;;;;;;;AAWA,IAAMA,MAAM,gBAAG,uBACb,UACEC,KADF,EAEEC,GAFF,EAMK;EACH,IAAMC,iBAAiB,GAAG,sCAAqBF,KAArB,CAA1B;EAEA,oBAAO,gCAAC,uBAAD;IAAa,GAAG,EAAEC;EAAlB,GAA2BC,iBAA3B,EAAP;AACD,CAXY,CAAf;eAceH,M"}
{"version":3,"file":"use-chakra-select-props.js","names":["useFormControl","useColorModeValue","chakraComponents","useChakraSelectProps","components","theme","size","colorScheme","isDisabled","isInvalid","isReadOnly","isRequired","inputId","tagVariant","hasStickyGroupHeaders","selectedOptionStyle","selectedOptionColor","focusBorderColor","errorBorderColor","chakraStyles","onFocus","onBlur","props","inputProps","id","placeholderColor","realSize","sizeOptions","includes","realTagVariant","tagVariantOptions","undefined","realSelectedOptionStyle","selectedOptionStyleOptions","realSelectedOptionColor","select","disabled"],"sources":["../../src/use-chakra-select-props.ts"],"sourcesContent":["import { useFormControl } from \"@chakra-ui/form-control\";\nimport { useColorModeValue } from \"@chakra-ui/system\";\nimport type { GroupBase, Props } from \"react-select\";\nimport chakraComponents from \"./chakra-components\";\nimport type { SelectedOptionStyle, Size, TagVariant } from \"./types\";\n\nconst useChakraSelectProps = <\n  Option,\n  IsMulti extends boolean = false,\n  Group extends GroupBase<Option> = GroupBase<Option>\n>({\n  components = {},\n  theme,\n  size = \"md\",\n  colorScheme = \"gray\",\n  isDisabled,\n  isInvalid,\n  isReadOnly,\n  isRequired,\n  inputId,\n  tagVariant,\n  hasStickyGroupHeaders = false,\n  selectedOptionStyle = \"color\",\n  selectedOptionColor = \"blue\",\n  focusBorderColor,\n  errorBorderColor,\n  chakraStyles = {},\n  onFocus,\n  onBlur,\n  ...props\n}: Props<Option, IsMulti, Group>): Props<Option, IsMulti, Group> => {\n  /**\n   * Combine the props passed into the component with the props that can be set\n   * on a surrounding form control to get the values of `isDisabled` and\n   * `isInvalid`\n   */\n  const inputProps = useFormControl({\n    id: inputId,\n    isDisabled,\n    isInvalid,\n    isRequired,\n    isReadOnly,\n    onFocus,\n    onBlur,\n  });\n\n  /**\n   * The chakra UI global placeholder color\n   *\n   * @see {@link https://github.com/chakra-ui/chakra-ui/blob/13c6d2e08b61e179773be4722bb81173dd599306/packages/theme/src/styles.ts#L13}\n   */\n  const placeholderColor = useColorModeValue(\"gray.400\", \"whiteAlpha.400\");\n\n  /** Ensure that the size used is one of the options, either `sm`, `md`, or `lg` */\n  let realSize: Size = size;\n  const sizeOptions: Size[] = [\"sm\", \"md\", \"lg\"];\n  if (!sizeOptions.includes(size)) {\n    realSize = \"md\";\n  }\n\n  /**\n   * Ensure that the tag variant used is one of the options, either `subtle`,\n   * `solid`, or `outline` (or undefined)\n   */\n  let realTagVariant: TagVariant | undefined = tagVariant;\n  const tagVariantOptions: TagVariant[] = [\"subtle\", \"solid\", \"outline\"];\n  if (tagVariant !== undefined) {\n    if (!tagVariantOptions.includes(tagVariant)) {\n      realTagVariant = \"subtle\";\n    }\n  }\n\n  /** Ensure that the selected option style is either `color` or `check` */\n  let realSelectedOptionStyle: SelectedOptionStyle = selectedOptionStyle;\n  const selectedOptionStyleOptions: SelectedOptionStyle[] = [\"color\", \"check\"];\n  if (!selectedOptionStyleOptions.includes(selectedOptionStyle)) {\n    realSelectedOptionStyle = \"color\";\n  }\n\n  /** Ensure that the color used for the selected options is a string */\n  let realSelectedOptionColor: string = selectedOptionColor;\n  if (typeof selectedOptionColor !== \"string\") {\n    realSelectedOptionColor = \"blue\";\n  }\n\n  const select: Props<Option, IsMulti, Group> = {\n    // Allow overriding of custom components\n    components: {\n      ...chakraComponents,\n      ...components,\n    },\n    // Custom select props\n    colorScheme,\n    size: realSize,\n    tagVariant: realTagVariant,\n    selectedOptionStyle: realSelectedOptionStyle,\n    selectedOptionColor: realSelectedOptionColor,\n    hasStickyGroupHeaders,\n    placeholderColor,\n    chakraStyles,\n    focusBorderColor,\n    errorBorderColor,\n    // Extract custom props from form control\n    onFocus: inputProps.onFocus,\n    onBlur: inputProps.onBlur,\n    isDisabled: inputProps.disabled,\n    isInvalid: !!inputProps[\"aria-invalid\"],\n    inputId: inputProps.id,\n    ...props,\n    // aria-invalid can be passed to react-select, so we allow that to\n    // override the `isInvalid` prop\n    \"aria-invalid\":\n      props[\"aria-invalid\"] ?? inputProps[\"aria-invalid\"] ? true : undefined,\n  };\n\n  return select;\n};\n\nexport default useChakraSelectProps;\n"],"mappings":"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"}
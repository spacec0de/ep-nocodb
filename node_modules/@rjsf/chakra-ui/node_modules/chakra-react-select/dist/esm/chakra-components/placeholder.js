function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from "react";
import { Box } from "@chakra-ui/layout";

var Placeholder = function Placeholder(props) {
  var children = props.children,
      className = props.className,
      cx = props.cx,
      innerProps = props.innerProps,
      _props$selectProps = props.selectProps,
      placeholderColor = _props$selectProps.placeholderColor,
      chakraStyles = _props$selectProps.chakraStyles;
  var initialStyles = {
    color: placeholderColor,
    mx: "0.125rem",
    position: "absolute",
    top: "50%",
    transform: "translateY(-50%)",
    userSelect: "none"
  };
  var sx = chakraStyles != null && chakraStyles.placeholder ? chakraStyles.placeholder(initialStyles, props) : initialStyles;
  return /*#__PURE__*/React.createElement(Box, _extends({}, innerProps, {
    className: cx({
      placeholder: true
    }, className),
    sx: sx
  }), children);
};

export default Placeholder;
//# sourceMappingURL=placeholder.js.map
{"version":3,"file":"creatable-select.js","names":["React","forwardRef","CreatableReactSelect","useChakraSelectProps","CreatableSelect","props","ref","chakraSelectProps"],"sources":["../../src/creatable-select.tsx"],"sourcesContent":["import React, { forwardRef } from \"react\";\nimport type { MutableRefObject, ReactElement, RefAttributes } from \"react\";\nimport type { GroupBase, SelectInstance } from \"react-select\";\nimport CreatableReactSelect from \"react-select/creatable\";\nimport type { CreatableProps } from \"react-select/creatable\";\nimport useChakraSelectProps from \"./use-chakra-select-props\";\n\nexport type CreatableSelectComponent = <\n  Option = unknown,\n  IsMulti extends boolean = false,\n  Group extends GroupBase<Option> = GroupBase<Option>\n>(\n  props: CreatableProps<Option, IsMulti, Group> &\n    RefAttributes<SelectInstance<Option, IsMulti, Group>>\n) => ReactElement;\n\nconst CreatableSelect = forwardRef(\n  <Option, IsMulti extends boolean, Group extends GroupBase<Option>>(\n    props: CreatableProps<Option, IsMulti, Group>,\n    ref:\n      | ((instance: SelectInstance<Option, IsMulti, Group> | null) => void)\n      | MutableRefObject<SelectInstance<Option, IsMulti, Group> | null>\n      | null\n  ) => {\n    const chakraSelectProps = useChakraSelectProps(props);\n\n    return <CreatableReactSelect ref={ref} {...chakraSelectProps} />;\n  }\n) as CreatableSelectComponent;\n\nexport default CreatableSelect;\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAGA,OAAOC,oBAAP,MAAiC,wBAAjC;AAEA,OAAOC,oBAAP,MAAiC,2BAAjC;AAWA,IAAMC,eAAe,gBAAGH,UAAU,CAChC,UACEI,KADF,EAEEC,GAFF,EAMK;EACH,IAAMC,iBAAiB,GAAGJ,oBAAoB,CAACE,KAAD,CAA9C;EAEA,oBAAO,oBAAC,oBAAD;IAAsB,GAAG,EAAEC;EAA3B,GAAoCC,iBAApC,EAAP;AACD,CAX+B,CAAlC;AAcA,eAAeH,eAAf"}